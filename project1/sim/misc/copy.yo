                      | # Execution begins at address 0
  0x000:              | 	.pos 0
  0x000: 30f400040000 | init:	irmovl Stack, %esp  	# Set up Stack pointer
  0x006: 30f500040000 | 	irmovl Stack, %ebp  	# Set up base pointer
  0x00c: 702c000000   | 	jmp Main		# Execute main program
                      | 
  0x014:              | 	.align 4
                      | # Source block
  0x014:              | src:
  0x014: 0a000000     | 	.long 0x00a
  0x018: b0000000     | 	.long 0x0b0
  0x01c: 000c0000     | 	.long 0xc00
                      | 
                      | # Destination block
  0x020:              | dest:
  0x020: 11010000     | 	.long 0x111
  0x024: 22020000     | 	.long 0x222
  0x028: 33030000     | 	.long 0x333
                      | 
  0x02c: 30f003000000 | Main:	irmovl $3,%eax
  0x032: a00f         | 	pushl %eax	# Push len(3)
  0x034: 30f214000000 | 	irmovl src,%edx
  0x03a: a02f         | 	pushl %edx      # Push src
  0x03c: 30f220000000 | 	irmovl dest,%edx
  0x042: a02f         | 	pushl %edx	# Push dest
  0x044: 804a000000   | 	call copy_block	# call copy_block(int *src, int *dest, int len)
  0x049: 00           | 	halt
                      | 
                      | /* $begin copy_block */
                      | 	# int copy_block(int *src, int *dest, int len)
  0x04a:              | copy_block:
  0x04a: a05f         | 	pushl %ebp
  0x04c: 2045         | 	rrmovl %esp,%ebp
  0x04e: a03f         | 	pushl %ebx           # Save value of %ebx
  0x050: 502508000000 | 	mrmovl 8(%ebp),%edx  # Get dest
  0x056: 50150c000000 | 	mrmovl 12(%ebp),%ecx # Get src
  0x05c: 503510000000 | 	mrmovl 16(%ebp),%ebx # Get len
  0x062: 6300         | 	xorl %eax,%eax       # Set result = 0
  0x064: 6233         | Loop:	andl %ebx,%ebx       # Test value of len
  0x066: 7190000000   | 	jle End              # If <= 0, goto End
  0x06b: c0f3ffffffff | 	iaddl $-1,%ebx       # len--
  0x071: 507100000000 | 	mrmovl (%ecx),%edi   # val = *src
  0x077: 407200000000 | 	rmmovl %edi,(%edx)   # *dest = val
  0x07d: c0f104000000 | 	iaddl $4, %ecx	     # src++
  0x083: c0f204000000 | 	iaddl $4, %edx       # dest++
  0x089: 6370         | 	xorl %edi,%eax       # result ^= val
  0x08b: 7064000000   | 	jmp Loop             # goto Loop
  0x090: 5035fcffffff | End:	mrmovl -4(%ebp),%ebx # done: Restore %ebx
  0x096: 2054         | 	rrmovl %ebp,%esp     # Deallocate stack frame
  0x098: b05f         | 	popl %ebp            # Restore %ebp0
  0x09a: 90           | 	ret
                      | /* $end copy_block */
  0x400:              | 	.pos 0x400
  0x400:              | Stack:	# The stack goes here
