                      | # sum function
                      | # Haoyuan Fu 517021910753
                      | /* $begin code-yso */
                      | /* $begin code-ysa */
                      | # Execution begins at address 0 
  0x000:              | 	.pos 0 
  0x000: 30f400010000 | init:	irmovl Stack, %esp  	# Set up stack pointer  
  0x006: 30f500010000 | 	irmovl Stack, %ebp  	# Set up base pointer   
  0x00c: 802c000000   | 	call Main		# Execute main program
  0x011: 00           | 	halt			# Terminate program 
                      | 
                      | # Array of 3 elements
  0x014:              | 	.align 4 	
  0x014:              | ele1:
  0x014: 0a000000     | 	.long 0x00a
  0x018: 1c000000     | 	.long ele2
  0x01c:              | ele2:
  0x01c: b0000000     | 	.long 0x0b0
  0x020: 24000000     | 	.long ele3
  0x024:              | ele3:
  0x024: 000c0000     | 	.long 0xc00	
  0x028: 00000000     | 	.long 0
                      | 
  0x02c: a05f         | Main:	pushl %ebp 
  0x02e: 2045         | 	rrmovl %esp,%ebp
  0x030: 30f214000000 | 	irmovl ele1,%edx
  0x036: a02f         | 	pushl %edx      	# Push ele1
  0x038: 8042000000   | 	call Sum		# sum_list(ele1)
  0x03d: 2054         | 	rrmovl %ebp,%esp
  0x03f: b05f         | 	popl %ebp
  0x041: 90           | 	ret 
                      | 
                      | /* $begin sum-ys 0 */
                      | 	# int sum_list(list_ptr ls)
  0x042: a05f         | Sum:	pushl %ebp
  0x044: 2045         | 	rrmovl %esp,%ebp
  0x046: 501508000000 | 	mrmovl 8(%ebp),%ecx 	# ecx = ele1
  0x04c: 6300         | 	xorl %eax,%eax		# sum = 0
  0x04e: 506100000000 | Loop:	mrmovl (%ecx),%esi	# get value
  0x054: 6060         | 	addl   %esi,%eax        # add to sum
  0x056: 502104000000 | 	mrmovl 4(%ecx),%edx	# next address
  0x05c: 6222         | 	andl   %edx,%edx
  0x05e: 736a000000   | 	je     End	
  0x063: 2021         | 	rrmovl %edx,%ecx	# ecx = ele -> next
  0x065: 704e000000   | 	jmp    Loop 
  0x06a: 2054         | End:	rrmovl %ebp,%esp
  0x06c: b05f         | 	popl %ebp
  0x06e: 90           | 	ret
                      | /* $end sum-ys 0 */
                      | 
                      | # The stack starts here and grows to lower addresses
  0x100:              | 	.pos 0x100		
  0x100:              | Stack:	 
                      | /* $end code-ysa */
                      | /* $end code-yso */
