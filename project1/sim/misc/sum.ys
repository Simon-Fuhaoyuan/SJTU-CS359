# sum function
# Haoyuan Fu 517021910753
/* $begin code-yso */
/* $begin code-ysa */
# Execution begins at address 0 
	.pos 0 
init:	irmovl Stack, %esp  	# Set up stack pointer  
	irmovl Stack, %ebp  	# Set up base pointer   
	call Main		# Execute main program
	halt			# Terminate program 

# Array of 3 elements
	.align 4 	
ele1:
	.long 0x00a
	.long ele2
ele2:
	.long 0x0b0
	.long ele3
ele3:
	.long 0xc00	
	.long 0

Main:	pushl %ebp 
	rrmovl %esp,%ebp
	irmovl ele1,%edx
	pushl %edx      	# Push ele1
	call Sum		# sum_list(ele1)
	rrmovl %ebp,%esp
	popl %ebp
	ret 

/* $begin sum-ys 0 */
	# int sum_list(list_ptr ls)
Sum:	pushl %ebp
	rrmovl %esp,%ebp
	mrmovl 8(%ebp),%ecx 	# ecx = ele1
	xorl %eax,%eax		# sum = 0
Loop:	mrmovl (%ecx),%esi	# get value
	addl   %esi,%eax        # add to sum
	mrmovl 4(%ecx),%edx	# next address
	andl   %edx,%edx
	je     End	
	rrmovl %edx,%ecx	# ecx = ele -> next
	jmp    Loop 
End:	rrmovl %ebp,%esp
	popl %ebp
	ret
/* $end sum-ys 0 */

# The stack starts here and grows to lower addresses
	.pos 0x100		
Stack:	 
/* $end code-ysa */
/* $end code-yso */
